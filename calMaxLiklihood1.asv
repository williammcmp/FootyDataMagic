function [best_mu, best_sigma] = calMaxLiklihood1(data)
    % Generate some example normally distributed data
    
    % Initialize variables for MLE estimation
    mu_hat = min(data); % Initial guess for mean
    sigma2_hat = 1; % Initial guess for variance
    
    figure

    % plotting the var of sigma^2 - mu is fixed
    logLiklihoodVals = [];
    for j=linspace(0.01, 5, 100) % iterate through sigma2 vals
        logLiklihoodVals = [logLiklihoodVals; calLogLiklilyhood(data, 50, j)];
        
    end
    plot(linspace(0.01, 5, 100), logLiklihoodVals)

    figure
    
    % Display the results
%     disp(['Maximum Log-Likelihood: ', num2str(log_liklilyhood)]);
%     disp(['MLE for Mean (mu): ', num2str(best_mu_hat)]);
%     disp(['MLE for Variance (sigma^2): ', num2str(best_sigma2_hat)]);


end

function val = calLogLiklilyhood(data, mu, sigma2)
    mu_sum = 0;
    for i=1:numel(data)
        mu_sum = mu_sum + (data(i) - mu)^2;
    end
    
    val = -((numel(data)/2) * log(2*pi*sigma2)) - (1/(2 * sigma2) * mu_sum);
    
end